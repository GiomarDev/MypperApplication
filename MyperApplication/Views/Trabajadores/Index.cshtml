@model List<MyperApplication.TransferObject.Model.Trabajadores>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form asp-action="Index" id="createTrabajadorForm">
    <div class="form-group">
        <label for="filtroSexo">Filtrar por Sexo:</label>
        <select class="form-control" id="filtroSexo">
            <option value="M">Masculino</option>
            <option value="F">Femenino</option>
        </select>
    </div>
    <br />
    @*<button type="submit" class="btn btn-primary">Buscar</button>*@
</form>
<br />
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table" id="trabajadoresTable">
    <thead>
        <tr>
            <th>
                <label>Tipo Documento</label>
            </th>
            <th>
                <label>Nro Documento</label>
            </th>
            <th>
                <label>Nombres</label>
            </th>
            <th>
                <label>Sexo</label>
            </th>
            <th>
                <label>Departamento</label>
            </th>
            <th>
                <label>Provincia</label>
            </th>
            <th>
                <label>Distritio</label>
            </th>
            <th>
                <label>Acción</label>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr class="@(item.Sexo == "M" ? "bg-primary" : "bg-warning")">
            <td>
                @Html.DisplayFor(modelItem => item.TipoDocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroDocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombres)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sexo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreDepartamento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProvincia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreDistrito)
            </td>
            <td>
                <a asp-action="Edit" class="btn btn-dark text-light" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" class="btn btn-dark text-light" asp-route-id="@item.Id">Details</a> |
                <a class="btn btn-dark text-light" onclick="eliminarRegistro(@item.Id)">Delete</a>
            </td>
        </tr>
}

        @{  
            if(Model.Count() == 0)
            {
                <h1>No hay información</h1>
            }
        }
    </tbody>
</table>

<script>

$(document).ready(function () {
        function cargarDatosFemeninos() {
            $('#trabajadoresTable').empty();
            var sexo = $("#filtroSexo").val();

            $.ajax({
                url: '/Trabajadores/ListTrabajadores',
                type: 'GET',
                data: { sexo },
                success: function (data) {
                    construirTabla(data);
                },
                error: function () {
                    console.error('Error al cargar datos con Ajax.');
                }
            });
        }

        function construirTabla(data) {
            $('#trabajadoresTable tbody').empty();
            if (data.length > 0) {
                $.each(data, function (index, item) {
                    var fila = '<tr class="' + (item.sexo === 'M' ? 'bg-primary' : 'bg-warning') + '">' +
                        '<td>' + item.tipoDocumento + '</td>' +
                        '<td>' + item.numeroDocumento + '</td>' +
                        '<td>' + item.nombres + '</td>' +
                        '<td>' + item.sexo + '</td>' +
                        '<td>' + item.nombreDepartamento + '</td>' +
                        '<td>' + item.nombreProvincia + '</td>' +
                        '<td>' + item.nombreDistrito + '</td>' +
                        '<td>' +
                        '<a href="/Trabajadores/Edit/' + item.id + '" class="btn btn-dark text-light">Edit</a> |' +
                        '<a href="/Trabajadores/Details/' + item.id + '" class="btn btn-dark text-light">Details</a> |' +
                        '<a class="btn btn-dark text-light" onclick="eliminarRegistro(' + item.id + ')">Delete</a>' +
                        '</td>' +
                        '</tr>';
                    $('#trabajadoresTable tbody').append(fila);
                });
            } else {
                $('#trabajadoresTable tbody').append('<tr><td colspan="8">No hay datos para mostrar.</td></tr>');
            }
        }

        $('#btnBuscar').on('click', function () {
            cargarDatosFemeninos();
        });
    });

    function eliminarRegistro(id) {
        Swal.fire({
            title: '¿Está seguro de eliminar el registro?',
            text: 'Esta acción no se puede deshacer.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminarlo'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/Trabajadores/Delete/${id}`,
                    type: 'POST',
                    success: function (response) {
                        debugger;
                        if (response == 200) {
                            //Swal.fire('Eliminado', "Eliminado correctamente", 'success');
                            location.reload();
                        } else {
                            Swal.fire('Error', 'No se pudo eliminar el registro.', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Ocurrió un error al procesar la solicitud.', 'error');
                    }
                });
            }
        });
    }
</script>